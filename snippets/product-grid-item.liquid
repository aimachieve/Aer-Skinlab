{%- liquid
  assign title_price_display = settings.title_price_display

  assign on_sale = false
  if product.compare_at_price > product.price
    assign on_sale = true
  endif

  assign sold_out = true
  if product.available
    assign sold_out = false
  endif

  if product.featured_image == blank
    assign title_price_display = 'under_image'
  endif

  assign show_sale_badge = settings.product_grid_show_sale_badge
-%}

{%- case settings.under_image_display_format -%}
{%- when 'title_left_price_right'-%}
  {%- capture layout_class -%}{% if products_per_row_mobile == 2 %}text-sm lg:text-base lg:flex{% else %}flex{% endif %}{%- endcapture-%}
  {%- capture price_class -%}{% if products_per_row_mobile == 2 %}text-left lg:w-2/5 lg:text-right mt-1 lg:mt-0 lg:pl-2{% else %}text-right pl-2{% endif %}{%- endcapture -%}
  {%- capture title_class -%}{% if products_per_row_mobile == 2 %}text-left lg:w-3/5{% else %}text-left w-3/5{% endif %}{%- endcapture -%}
  {%- assign swatch_class = 'justify-start' -%}
{%- when 'title_left_price_under'-%}
  {%- capture layout_class -%}{% if products_per_row_mobile == 2 %}text-sm lg:text-base {% endif %}{%- endcapture-%}
  {%- capture price_class -%}text-left mt-1 {% if settings.product_grid_show_vendor %}lg:mt-2{% endif %}{%- endcapture -%}
  {%- assign title_class = 'text-left' -%}
  {%- assign swatch_class = 'justify-start' -%}
{%- when 'title_center_price_under'-%}
  {%- capture layout_class -%}{% if products_per_row_mobile == 2 %}text-sm lg:text-base {% endif %}text-center{%- endcapture-%}
  {%- capture price_class -%}text-center mt-1 {% if settings.product_grid_show_vendor %}lg:mt-2{% endif %}{%- endcapture -%}
  {%- assign title_class = 'text-center' -%}
  {%- assign swatch_class = 'justify-center' -%}
{%- endcase -%}

<div class="group block h-full relative text-center type-product-grid-item {% unless settings.title_price_display == 'on_hover' %}hover:text-{{ section_color }}-accent{% endunless %}" x-data="{ current_swatch_variant: '' }">
  {% comment %}Hidden link for screen readers, see Debut{% endcomment %}
  <a href="{{ product.url | within: collection }}" class="increase-target"><span class="visually-hidden">{{ product.title }}</span></a>
  <div class="relative">
    {%- if show_sale_badge and on_sale -%}
      <div class="z-10 p-2  bg-{{ section_color }}-accent text-{{ section_color }}-text-overlay absolute {% if title_price_display == 'over_image_top' %}bottom-2{% else %}top-2{% endif %} right-2">On sale</div>
    {%- endif -%}

    <div class="w-full h-full  {% unless settings.fill_image_to_border_edge %}{% if title_price_display == 'under_image' %}pt-2 lg:pt-4{% else %}py-2 lg:py-4{% endif %} {% if reduce_gutter %}px-1 lg:px-2{% else %}px-2 lg:px-4{% endif %}{% endunless %} {% if title_price_display == 'under_image' and settings.fill_image_to_border_edge %}border-b-grid border-grid-color pb-0 lg:pb{% endif %} ">
      <div class="featured-collection__image z-0 relative">

        {% liquid
          assign object_contain_grid = false
          unless settings.product_grid_image_size == 'natural'
            assign object_contain_grid = true
            assign ratio = settings.product_grid_image_size | plus: 0
          endunless
        %}
        {%- if object_contain_grid -%}
          <div class="gallery-image-cropped relative"
            style="padding-top:{{ 1 | divided_by: ratio | times: 100 }}%;">
            {%- if product.featured_image != blank -%}
            {%- render 'image-object' with
              image: product.featured_image,
              contain: true
            -%}
            {%- else -%}
              {%- assign placeholder_svg_tag = 'placeholder-svg placeholder-svg--no-border bg-placeholder-bg' -%}
              <span class="absolute top-0 left-0 right-0 bottom-0 text-text">{{ 'image' | placeholder_svg_tag: placeholder_svg_tag }}</span>
            {%- endif -%}
          </div>
        {%- else -%}
          {%- if product.featured_image != blank -%}
            {%- render 'responsive-image' with
              image: product.featured_image
            -%}
          {%- else -%}
            {%- assign placeholder_svg_tag = 'placeholder-svg placeholder-svg--no-border bg-placeholder-bg' -%}
            {{ 'image' | placeholder_svg_tag: placeholder_svg_tag }}
          {%- endif -%}
        {%- endif -%}

        {% if product.media.size > 1 and settings.products_show_second_image_on_hover %}
          {% assign hover_image = product.media[1].preview_image %}
          <div class="product-item-hover bg-{{ section_color }}-background lazyload absolute top-0 left-0 bottom-0 right-0 opacity-0 z-10 {% if object_contain_grid %}bg-contain{% else %}bg-cover{% endif %} bg-no-repeat bg-center transition-opacity duration-200 ease-in-out  group-hover:opacity-100"
              data-bgset="{% render 'responsive-bg-image', image: hover_image %}"
              data-sizes="auto"
              data-parent-fit="cover"
              >
          </div>
        {% endif %}

        {%- if settings.enable_color_swatches_collections -%}
          <div class="swatch-images-container hidden lg:block">
            <div x-show.transition.opacity.duration.200ms="current_swatch_variant !== ''" class="bg-{{ section_color }}-background absolute top-0 right-0 bottom-0 left-0 z-20"></div>
            {%- assign swatch_trigger = 'products.product.color_swatch_trigger' | t | downcase -%}
            {%- for option in product.options_with_values -%}
              {%- liquid
                assign is_color = false
                assign option_downcase = option.name | downcase
                if option_downcase contains swatch_trigger
                  assign is_color = true
                elsif swatch_trigger == 'color' and option_downcase contains 'colour'
                  assign is_color = true
                endif
              -%}
              {%- if is_color -%}
                {%- assign option_index = forloop.index0 -%}
                {%- assign values = '' -%}
                {%- for variant in product.variants -%}
                  {%- assign value = variant.options[option_index] %}
                  {%- unless values contains value -%}
                    {%- liquid
                      assign values = values | join: ','
                      assign values = values | append: ',' | append: value
                      assign values = values | split: ','
                    -%}

                    {%- if variant.image -%}
                      <div class="hidden lg:block product-item-hover bg-{{ section_color }}-background lazyload absolute top-0 left-0 bottom-0 right-0 z-20 {% if object_contain_grid %}bg-contain{% else %}bg-cover{% endif %} bg-no-repeat bg-center transition-opacity duration-200 ease-in-out"
                          data-bgset="{% render 'responsive-bg-image', image: variant.image %}"
                          data-sizes="auto"
                          data-parent-fit="cover"
                          x-show.transition.opacity.duration.200ms="current_swatch_variant === '{{ variant.id }}'"
                          >
                      </div>
                    {%- endif -%}

                  {%- endunless -%}
                {%- endfor -%}
              {%- endif -%}
            {%- endfor -%}
          </div>
        {%- endif -%}

      </div>
    </div>

    <div class="{% if settings.product_grid_uppercase %}uppercase{% endif %} {% if title_price_display == 'on_hover' or title_price_display contains 'over_image' %}absolute {% if settings.fill_image_to_border_edge %}{% if title_price_display == 'over_image_top' %}top-0{% else %}bottom-0{% endif %} left-0 right-0{% else %}left-4 right-4 {% if title_price_display == 'over_image_top' %}top-4{% else %}bottom-4{% endif %}{% endif %}{% endif %} {% if title_price_display == 'on_hover' %}product-grid__meta opacity-0 group-hover:opacity-100 {% if settings.fill_image_to_border_edge %}border-t-grid border-grid-color  bg-{{ section_color }}-background {% endif %}  transition-opacity duration-200 ease-in-out text-{{ section_color }}-text {% endif %} py-8 {% if reduce_gutter %}px-1 lg:px-2{% else %}section-x-padding{% endif %} justify-between {{ layout_class }}">
      <div class="{{ title_class }} break-words">
        {% if settings.product_grid_show_vendor and product.vendor != '' %}
          <p class="mb-1 text-{{ section_color }}-meta {% if sold_out %} line-through{% endif %}">{{ product.vendor }}</p>
        {% endif %}
        <p  aria-hidden="true" class="product-grid-title {% if sold_out %}text-{{ section_color }}-meta line-through{% endif %}">{{ product.title }}</p>
      </div>
      <div class="{{ price_class }}">
        {% if sold_out %}
          <s class="text-{{ section_color }}-meta">{{ 'products.product.sold_out' | t }}</s>
        {% else %}
          {% if on_sale and sold_out != true %}
            <s class="block lg:inline"><span class="visually-hidden">{{ 'products.product.regular_price' | t }}</span>{{ product.compare_at_price | money }}</s>
          {% endif %}
          {% if on_sale %}
            {% if product.price_varies %}
              {%- assign sale_price = product.price | money -%}
              <span class="text-{{ section_color }}-accent"><span class="visually-hidden">{{ 'products.product.sale_price' | t }}</span><br/>{{ 'products.product.on_sale_from_html' | t: price: sale_price }}</span>
            {% else %}
              <span class="text-{{ section_color }}-accent"><span class="visually-hidden">{{ 'products.product.sale_price' | t }}</span>{{ product.price | money }}</span>
            {% endif %}
          {% else %}
            {% if product.price_varies %}
              {%- assign price = product.price | money -%}
              <span>{{ 'products.product.from_lowest_price_html' | t: lowest_price: price }}</span>
            {% else %}
              <span>{{ product.price | money }}</span>
            {% endif %}
          {% endif %}
        {% endif %}
        {% assign current_variant = product.first_available_variant %}
        {%- if current_variant.unit_price -%}
          <p class="{% if sold_out %}text-{{ section_color }}-meta line-through{% endif %} text-xs" data-unit-price-wrapper>
            <span data-unit-price>
              {{- current_variant.unit_price | money -}}
            </span>
            <span>/</span>
            <span data-unit-price-measurement-reference-value>
            {%- if current_variant.unit_price_measurement.reference_value != 1 -%}
              {{- current_variant.unit_price_measurement.reference_value -}}
            {%- endif -%}
            </span>
            <span data-unit-price-measurement-reference-unit>
              {{- current_variant.unit_price_measurement.reference_unit -}}
            </span>
          </p>
        {%- endif -%}
      </div>
    </div>

  </div>

  {%- if settings.enable_color_swatches_collections -%}
    {%- assign swatch_trigger = 'products.product.color_swatch_trigger' | t | downcase -%}
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign is_color = false
        assign option_downcase = option.name | downcase
        if option_downcase contains swatch_trigger
          assign is_color = true
        elsif swatch_trigger == 'color' and option_downcase contains 'colour'
          assign is_color = true
        endif
      -%}
      {%- if is_color and title_price_display == 'under_image' -%}
      <div class="pb-4 {% if reduce_gutter %}px-1 lg:px-2{% else %}section-x-padding{% endif %}">
        {%- assign option_index = forloop.index0 -%}
        {%- assign values = '' -%}
        <div class="flex -mx-1 relative z-10 {{ swatch_class }} flex-wrap -mt-2" x-on:mouseleave="setTimeout(() => { current_swatch_variant = '' }, 200)">
          {%- for variant in product.variants -%}
            {%- assign value = variant.options[option_index] %}
            {%- unless values contains value -%}
              {%- liquid
                assign values = values | join: ','
                assign values = values | append: ',' | append: value
                assign values = values | split: ','

                assign color_image = value | handle | append: '.' | append: 'png' | file_img_url: '50x' | prepend: 'https:'
                assign color_swatch_fallback = value | split: ' ' | last | handle
                assign color_count = color_count | plus: 1
              -%}
              <a
                href="{{ variant.url | within: collection }}"
                class="p-px border-{{ section_color }}-text {% render 'button-style', section_color: section_color %} border-text mx-1 mt-2"
                x-on:mouseenter="current_swatch_variant = '{{ variant.id }}'"
                >
                <span class="block p-2 {% render 'button-style', section_color: section_color %}" style="background-image: url({{ color_image }}); background-color: {{ color_swatch_fallback }};"></span>
                <span class="visually-hidden">{{ value }}</span>
              </a>
            {%- endunless -%}
           {%- endfor -%}
        </div>
      </div>
      {%- endif -%}
    {%- endfor -%}
  {%- endif -%}

</div>
